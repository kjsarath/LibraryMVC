@model LibraryMVC.Models.LibraryGetIssueDetails_Result 
@{
    ViewBag.Title = "New Book Issue";
    Layout = "~/Views/Shared/_mainLayout.cshtml";
}

<h2></h2>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.2/themes/smoothness/jquery-ui.css">
    <script type="text/javascript">
     $(document).ready(function () {
         $('input[type=datetime]').datepicker({
             dateFormat: "dd/M/yy",
             changeMonth: true,
             changeYear: true,
             yearRange: "-60:+0"
         });

     });

     $(document).on('change', '#AccessionNo', function () {
         var stateId = $('#AccessionNo').val();
         $.ajax({
             url: '/Issue/FillWithAccessionNo',
             type: "GET",
             dataType: "JSON",
             data: { ID: stateId },
             success: function (books) {
                 $("#Title").val(books.Title);
                 $("#BookCode").val(books.BookCode);
                 $("#BookID").val(books.BookID);
             }
         });
     });
     
     $(function () {
         // Initialize numeric spinner input boxes
         //$(".numeric-spinner").spinedit();
         // Initialize modal dialog
         // attach modal-container bootstrap attributes to links with .modal-link class.
         // when a link is clicked with these attributes, bootstrap will display the href content in a modal dialog.
         $('body').on('click', '.modal-link', function (e) {
             e.preventDefault();
             $(this).attr('data-target', '#modal-container');
             $(this).attr('data-toggle', 'modal');
             $("#txtSearch").focus();
         });
         // Attach listener to .modal-close-btn's so that when the button is pressed the modal dialog disappears
         $('body').on('click', '.modal-close-btn', function () {
             $('#modal-container').modal('hide');
         });
         //clear modal cache, so that new content can be loaded
         $('#modal-container').on('hidden.bs.modal', function () {
             $(this).removeData('bs.modal');
         });
         $('#CancelModal').on('click', function () {
             return false;
         });
     });

     //$(document).on('click', '#edit-book', function () {
     //    $.ajax({
     //        url: '/Issue/FillBookData',
     //        type: "GET",
     //        dataType: "JSON",
     //        data: { ID: $(this).attr('id') },
     //        success: function (books) {
     //            $("#Title").val(books.Title);
     //            $("#AccessionNo").val(books.AccessionNo);
     //            $("#BookCode").val(books.BookCode);
     //            $("#BookID").val(books.BookID);
     //        }
     //    });
     //    $('#modal-container').modal('hide');
     //});

     $('#modal-container').on('shown.bs.modal', function () {
         $('#txtSearch').focus();
     });

     //$(document).on('click', '#edit-member', function () {
     //    $.ajax({
     //        url: '/Issue/FillMemberData',
     //        type: "GET",
     //        dataType: "JSON",
     //        data: { ID: $(this).attr('id') },
     //        success: function (mems) {
     //            $("#AccountCode").val(mems.AccountCode);
     //            $("#AccountName").val(mems.AccountName);
     //            $("#Description").val(mems.Category);
     //            $("#MemberID").val(mems.AccountID);
     //        }
     //    });
     //    $('#modal-container').modal('hide');
        //});

     $(document).on('change', "#FromDate, #ToDate", function () {
         if (Date.parse($("#FromDate").val()) && Date.parse($("#ToDate").val())) {
             var st = $("#FromDate").val();
             var en = $("#ToDate").val();
             var diff = new Date(new Date(en) - new Date(st));
             $("#NoOfDays").val(diff / 1000 / 60 / 60 / 24);
         }
     });

     //$(document).on('change', "#ToDate", function () {
     //    if (Date.parse($("#FromDate").val()) && Date.parse($("#ToDate").val())) {
     //        var st = $("#FromDate").val();
     //        var en = $("#ToDate").val();
     //        var diff = new Date(new Date(en) - new Date(st));
     //        $("#NoOfDays").val(diff / 1000 / 60 / 60 / 24);
     //    }
     //});
    </script>
    
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    <div id="modal-container" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-content">
        </div>
    </div>
    <div style="font-family:Calibri ;font-size:10px">
        <table style="width:100%;">
            <tr>
                <td colspan="4" Style="text-align: right; font-family: Corbel; font-size: large;">
                    BOOK ISSUE - DETAILS
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)
                    @Html.HiddenFor(model => model.BookID , new { htmlAttributes = new { @ID = "BookID" } })
                    @Html.HiddenFor(model=>model.MemberID, new { htmlAttributes = new { @ID = "MemberID" } })
                </td>
            </tr>
            <tr>
                <td colspan="4" class="SubHead">ISSUE DETAILS</td>
            </tr>
            <tr>
                <td class="tdStyle2" style="width:10%">Issue No</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    @Html.EditorFor(model => model.IssueNo , new { htmlAttributes = new { @class = "TextBoxTDBG4" } })
                    @Html.ValidationMessageFor(model => model.IssueNo, "", new { @class = "text-danger" })
                </td>
                <td style="width:10%;border: solid 1px #ffffff"></td>
                <td style="width: 40%;border: solid 1px #ffffff">
                    <span class="dxeBase_DevEx" id="Span15"></span>
                </td>
            </tr>
            <tr>
                <td class="tdStyle2" style="width:10%">Issued On</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    @Html.EditorFor(model => model.FromDate , new { htmlAttributes = new { @class = "TextBoxTDBG4", @ID = "FromDate" } })
                    @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                </td>
                <td style="width:10%;border: solid 1px #ffffff"></td>
                <td style="width: 40%;border: solid 1px #ffffff">
                    <span class="dxeBase_DevEx" id="Span15"></span>
                </td>
            </tr>
            <tr>
                <td class="tdStyle2" style="width:10%">Due Date</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    @Html.EditorFor(model => model.ToDate , new { htmlAttributes = new { @class = "TextBoxTDBG4", @ID = "ToDate" } })
                    @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                </td>
                <td class="tdStyle2" style="width:10%">No Of Days</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    @Html.EditorFor(model => model.NoOfDays , new { htmlAttributes = new { @class = "TextBoxTDBG4", @ID = "NoOfDays" } })
                    @Html.ValidationMessageFor(model => model.NoOfDays, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td colspan="4" class="SubHead">MEMBER DETAILS</td>
            </tr>
            <tr>
                <td class="tdStyle2" style="width:10%">Member Code</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    <table style="width:100%">
                        <tr>
                            <td style="width:80%">
                                @Html.EditorFor(model => model.AccountCode, new { htmlAttributes = new { @class = "TextBoxTDBG4", @ID = "AccountCode" } })
                                @Html.ValidationMessageFor(model => model.AccountCode, "", new { @class = "text-danger" })
                            </td>
                            <td style="width:20%">
                                @Html.ActionLink("Select", "ViewMemberSelection", "Issue", null, new { @class = "modal-link btn" })
                            </td>
                        </tr>
                    </table>
                </td>
                <td style="width:10%;border: solid 1px #ffffff"></td>
                <td style="width: 40%;border: solid 1px #ffffff">
                    <span class="dxeBase_DevEx" id="Span15"></span>
                </td>
            </tr>
            <tr>
                <td class="tdStyle2" style="width:10%">Name</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    @Html.EditorFor(model => model.AccountName , new { htmlAttributes = new { @class = "TextBoxTDBG4", @ID = "AccountName" } })
                    @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
                </td>
                <td class="tdStyle2" style="width:10%">Category</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    @Html.EditorFor(model => model.Description , new { htmlAttributes = new { @class = "TextBoxTDBG4", @ID = "Description" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td colspan="4" class="SubHead">BOOK DETAILS</td>
            </tr>
            <tr>
                <td class="tdStyle2" style="width:10%">Accession No</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    <span class="dxeBase_DevEx" id="Span5"></span>
                    <table style="width:100%">
                        <tr>
                            <td style="width:80%">
                                @*@Html.DropDownListFor(model => model.AccessionNo, new SelectList((List<Tuple<string, int>>)ViewBag.AccessionList, "Item2", "Item1"), "--Select--", new { @class = "TextBoxTDBG4", @ID = "AccessionNo" })*@
                                @Html.EditorFor(model => model.AccessionNo, new { htmlAttributes = new { @class = "TextBoxTDBG4", @ID = "AccessionNo" } })
                                @Html.ValidationMessageFor(model => model.AccessionNo, "", new { @class = "text-danger" })
                            </td>
                            <td style="width:20%">
                                @Html.ActionLink("Select", "ViewBookSelection", "Issue", null, new { @class = "modal-link btn" })
                            </td>
                        </tr>
                    </table>
                    
                </td>
                <td style="width:10%;border: solid 1px #ffffff"></td>
                <td style="width: 40%;border: solid 1px #ffffff">
                    <span class="dxeBase_DevEx" id="Span15"></span>
                </td>
            </tr>
            <tr>
                <td class="tdStyle2" style="width:10%">Book Code</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    <span class="dxeBase_DevEx" id="Span7"></span>
                    @*@Html.DropDownListFor(model => model.BookCode, new SelectList((List<Tuple<string, int>>)ViewBag.BookCodeList, "Item2", "Item1"), "--Select--", new { @class = "TextBoxTDBG4", @ID = "BookCode" })*@
                    @Html.EditorFor(model => model.BookCode , new { htmlAttributes = new { @class = "TextBoxTDBG4", @ID = "BookCode" } })
                    @Html.ValidationMessageFor(model => model.BookCode, "", new { @class = "text-danger" })
                </td>
                <td class="tdStyle2" style="width:10%">Title</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    <span class="dxeBase_DevEx" id="Span7"></span>
                    @Html.EditorFor(model => model.Title , new { htmlAttributes = new { @class = "TextBoxTDBG4",@ID="Title" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td class="tdStyle2" style="width:10%">Call No</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    <span class="dxeBase_DevEx" id="Span9"></span>
                    @Html.EditorFor(model => model.CallNo , new { htmlAttributes = new { @class = "TextBoxTDBG4" } })
                    @Html.ValidationMessageFor(model => model.CallNo, "", new { @class = "text-danger" })
                </td>

                <td class="tdStyle2" style="width:10%">Barcode</td>
                <td class="TextBoxTDBG3" style="width: 40%">
                    <span class="dxeBase_DevEx" id="Span10"></span>
                    @Html.EditorFor(model => model.Barcode, new { htmlAttributes = new { @class = "TextBoxTDBG4" } })
                    @Html.ValidationMessageFor(model => model.Barcode, "", new { @class = "text-danger" })
                </td>
            </tr>
        </table>
    </div>
    
    <script type="text/javascript" >
        
    </script>
    <script type="text/javascript">
        
    </script>
    <br />
    <form method="post">
        <div class="form-group">
            <div style="text-align: left">
                <input type="submit" name="action:Save" value="Save" class="btn btn-success " />
                <input type="submit" name="action:Back" value="Cancel" class="btn btn-danger" />
            </div>
        </div>
        <div style="text-align: left">
            <input type="submit" name="action:Back" value="Back To List" class="btn btn-primary " />
        </div>
    </form>
                        }
